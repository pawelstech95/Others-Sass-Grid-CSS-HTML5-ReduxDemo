

/*                                              Grid

            Display-grid
            grid-template-columns: 200 100 500 - 6 elementow ale dwa rzedy poniewaz zdefiniowalismy 3 wartosci
                1fr to jest tor, zawsze maja taka sama szerokosc
            grid-template-rows: 100px 200px;
                frakcja zabiera cale miesjce ktore zostanie
            g-t-c 1fr
            g-t-r 2fr jedna kolumna i dwa rzedy chyba ze wiecej mamy divow
                

            height: 100vh; - 100% wysokosci strony
            min-height: calc(100vh - 30px); - mozemy mieszac rozne miary
                    jak damy min-height to wtedy jak jest za male to sie strona nie rozjezdza

            grid-auto-columns: repeat(3, 1fr) - wszystko co po , powtarza 3x      jak damy (3, 1fr  50px) to 1 fr, 50 px, x3         
            grid-auto-rows: 200px 100px 200px;  wszystkie nie zdefinbiowane powyzej maja wielkosc 200 100 200

}


            body {
    font-family: sans-serif;
}
.grid_container {
    border: 1px solid red;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 2fr 3fr 4fr 5fr 6fr;

}
.item1 {
    border: 1px solid black;
    margin: 5px;
}





body {
    font-family: sans-serif;
}
.grid_container {
    border: 1px solid red;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: 40px;
    
}
.item {
    border: 1px solid black;
    margin: 5px;
}
.item1 { /* mozemy nadac poczatek i koniec* zaczyna sie np na 1 a lkonczy na 4 czyli ma szerotosc jak 3 kolumny 
    
                grid-column-end: span 2 - przedluz o dwie linie;
                
                grid-column-start: 1; - zaczyna sie na pierwszej lini konczy na 4
                grid-column-end: 3;

                        MOZNA TE KOMENDY SKRACAC NP GRID-COLUMN: 1POCZATEK/2 SPAN KONIEC
                
            
    grid-column-start: 1;
    grid-column-end: 3;
}

/*                               linia           linia                  piata linia przy krawedzi
        grid-template-columns: [pierwsza] 1fr [druga itd] 1fr 1fr 1fr 1fr ;

        .item1 {
            grid-column: pierwsza / trzecia; od pierwszej do trzeciej lini
        }



         <div class="item header">Header</div>
                *** mamy 6 rzedow po 1 kolumnie i chcemy zamienic 6 na pierwsza pozycje ***

         grid-row: 1/2 ***zamiast 6, dajemy jak chcemy nie mieszac w html***
                    zamiast 1 i 2 mozemy ustawic nazwe [header-start] [header-end]

************************************************************************************************************
                grid-auto-flow: row/column; ustalamy jak ma oplywac  1 2   1  3
                                                                     3 4   2  4

                                    *****   Tory - Kolumny - Wiersze   *****                                   

                justify-content: start;         poziom
                align-content: start;           pion
                                end center

                                    *****  Komórki ****

                justify-items: streach;         
                align-items: streach; 
                                start end center
                                 TEXT-Align: center - jezeli chcemy to osiagnac to mozzemy dodac class dla diva np item6
                                    i wtedy dac mu display: flex
                align/justify-self:strech



            *** ZALOZMY ZE MAMY BLOK W TYM WYPADKU JEST TO KOLUMNA I WIERSZ A W NIM SA KOMOWKI CZYLI NP TEKST ***
                    CZYLI JEZELI CHCEMY USTAWIAC STRONE TO ZA POMOCA CONTENT A JEZELI TEKST TO ITEMS




                            JAK POZYCJONOWAC GRIDA?
                                 Wrzucamy calego .grid-container do diva .flexbox
                                    .flexbox{
                                    display:flex
                                    justify-content: center
                                    align-items: center
                                    height: 100% (musi byc wiekszy niz grid)
                                    } 





                                    .grid_container{
            border: 1px solid red;
            display: grid;
            height: 500px;
            grid-template-columns: 200px 100px 100px;
            grid-template-rows: 100px 80px;
            justify-content: start;
            align-content: start;
        }
        .item {
            margin: 5px;
            border: 1px solid black;
          

        }

*********************************************************************************************************************************************

        grid template colyumn: minmax(min-content, max-content)-

*********************************************************************************************************************************************





*/




            body {
                font-family: sans-serif; margin: 0px;
            }
            .grid_container {
                border: 1px solid red;
                height: 500px;
                display: grid;
                grid-template-columns: 1fr 200px; /*  */
                grid-template-rows: 100px 1fr 50px 15%;
                grid-template-areas:  /* dzieki temu ustalamy jak ukladamy strone, pozniej odwolujemy sie do poszczegolnych class */
                "header header"         /* mozna dzieki temu w latwy sposob zmienic uklad strony mozna podstawiac rozne nazwy i uzyskiwac rozne efekty */
                "content sidebar"               /* dodatkowo mozemy dodac none - niezdefiniowana powierzchnia i . - czyli nic */
                "nav sidebar"
                "footer footer"
                ;
                /*  grid-column-gap: 10px;
                    grid-row-gap: 10px;     */      /* sa jednostki min i max */
                grid-gap: 10px
            }      
            .item {
               
                border: 1px solid black;
             }
            .footer{
                grid-area: footer;
            }
            .content{
                grid-area: content;
            }
            .header{
                grid-area: header;
            }
            .nav{
                grid-area: nav;
            }
            .sidebar{
                grid-area: sidebar;
            
            }
            

            .grid_container
            {
                grid-template-columns: minmax(100px, 200px) 1fr;
            }
            /*  minimum 100px  
            
            grid-template-columns: minmax(min-content, max-content) 1fr;

                min content wyszukuje najwieksze slowo w kolumnie i zmniejsza sie do tego momentu - poniewaz nie mozna rozdzielic slowa
                max content rozciaga sie maxymalnie na tylew ile zajmuje np zdanie w komórce - tyle ile potrzebuje nie wiecej- 
                mozna dac max kontent jako wartosc minimalna jezeli nie chcemy zeby nam sie cos w kolumnie zepsulo;
            */